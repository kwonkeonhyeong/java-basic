상속 관계

상속은 객체 지향 프로그래밍의 핵심 요소 중 하나로, 기존 클래스의 필드와 메서드를 새로운 클래스에서 재사용하게 해준다.
이름 그대로 기존 클래스의 속성과 기능을 그대로 물려받는 것이다.
상속을 사용하려면 extends 키워드를 사용하면 된다. 그리고 extends 대상은 하나만 선택할 수 있다.

- 부모 클래스 (슈퍼 클래스) : 상속을 통해 자신의 필드와 메서드를 다른 클래스에 제공하는 클래스
- 자식 클래스 (서브 클래스) : 부모 클래스로부터 필드와 메서드를 상속받는 클래스

* 단일 상속
자바는 다중 상속을 지원하지 않는다. 그래서 extends 대상은 하나만 선택할 수 있다. 부모를 하나만 선택할 수 있다는 뜻이다. 또 다른 부모를 가지는 것은 괜찮다.

* 상속과 메서드 오버라이딩 -> 부모에게서 상속 받은 기능을 자식이 재정의 하는 것을 메서드 오버라이딩(Overriding)이라 한다.

@Override
@이 붙은 부분을 애노테이션이라 한다. 애노테이션은 주석과 비슷한데, 프로그램이 읽을 수 있는 특별한 주석이라 생각하면 된다.
애노테이션을 붙이면 실수로 override한 메서드에 오타가 발생하는 등의 경우에서 컴파일 오류로 사전에 오류를 잡을 수 있다.
필수는 아니지만 붙이는 것을 권장한다!!!


오버로딩(Overloading)과 오버라이딩(Overriding)
* 메서드 오버로딩 : 메서드 이름이 같고 매개변수(파라미터)가 다른 메서드를 여러개 정의하는 것을 메서드 오버로딩(Overloading)이라 한다.
                 오버로딩은 번역하면 과적인데, 과하게 물건을 담았다는 뜻이다. 따라서 같은 이름의 메서드를 여러개 정의했다고 이해하면 된다.

* 메서드 오버라이딩 : 메서드 오버라이딩은 하위 클래스에서 상위 클래스의 메서드를 재정의하는 과정을 의미한다. 따라서 상속 관계에서 사용한다.
                   부모의 기능을 자식이 다시 정의하는 것이다. 오버라이딩을 단순히 해석하면 무언가를 넘어서 타는 것을 말한다.
                   자식의 새로운 기능이 부모의 기존 기능을 넘어 타서 기존 기능을 새로운 기능으로 덮어버린다고 이해하면 된다.
                   오버라이딩을 우리말로 번역하면 무언가를 다시 정의한다고 해서 재정의라 한다.
                   상속 관계에서는 기존 기능을 다시 정의한다고 이해하면된다.
                   실무에서는 메서드 오버라이딩, 메서드 재정의 둘다 사용한다.


- 메서드 오버라이딩 조건

* 메서드 이름 : 메서드 이름이 같아야 한다.
* 메서드 파라미터 : 파라미터 타입, 순서, 개수가 같아야 한다.
* 반환 타입 : 반환 타입이 같아야 한다. 단 반환 타입이 하위 클래스 타입일 수 있다.
* 접근 제어자 : 오버라이딩 메서드의 접근 제어자는 상위 클래스의 메서드보다 더 제한적이어서는 안된다.
              예를 들어, 상위 클래스 protected로 선언되어 있으면 하위 클래스에서 이를 public 또는 protected로 오버라이드할 수 있지만,
              private 또는 default로 오버라이드 할 수 없다.
* 예외 : 오버라이팅 메서드는 상위 클래스의 메서드보다 더 많은 체크 예외를 throws로 선언할 수 없다. 하지만 더 적거나 같은 수의 예외,
        또는 하위 타입의 예외는 선언할 수 있다.
* static, final, private : 키워드가 붙은 메서드는 오버라이딩 될 수 없다.
    - static은 클래스 레벨에서 작동하므로 인스턴스 레벨에서 사용하는 오버라이딩이 의미가 없다.
      쉽게 이야기 해서 그냥 클래스 이름을 통해 필요한 곳에 직접 접근하면 된다.
    - final 메서드는 재정의를 금지한다.
    - private 메서드는 해당 클래스에서만 접근 가능하기 때문에 하위 클래스에서 보이지 않는다. 따라서 오버라이딩 할 수 없다.
* 생성자 오버라이딩 : 생성자는 오버라이딩 할 수 없다.


super - 부모 참조
부모와 자식의 필드명이 같거나 메서드가 오버라이딩 되어 있으면, 자식에서 부모의 필드나 메서드를 호출할 수 없다. 이때 super키워드를 사용하면 부모를 참조할 수 있다.
super는 이름 그대로 부모 클래스에 대한 참조를 나타낸다.


super - 생성자
상속 관계의 인스턴스를 생성하면 결국 메모리 내부에는 자식과 부모 클래스가 각각 다 만들어진다.
상속 관계를 사용하면 자식 클래스의 생성자에서 부모 클래스의 생성자를 반드시 호출해야 한다.(규칙)
상속 관계에서 부모의 생성자를 호출할 때는 super(...)를 사용하면 된다.